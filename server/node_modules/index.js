const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const userModel = require("./model/user");
const registrationModel=require("./model/registrationDetails")

const app = express();

app.use(express.json());
app.use(cors());

// Updated MongoDB connection string
const DB = 'mongodb+srv://admin:Admin@cluster0.b2w1mhb.mongodb.net/users?retryWrites=true&w=majority&appName=Cluster0';

mongoose.connect(DB, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
 
})
.then(() => {
    console.log("Connected successfully!!");
})
.catch((err) => {
    console.log(err);
});

// Sign Up page Post request
app.post("/signup", (req, res) => {
    console.log("Request Body:", req.body); // Logging the request body

    // Destructuring name and email from req.body
    const { name, email } = req.body;

    // Creating a new user instance
    const newUser = new userModel({ name, email });

    // Saving the new user to the database
    newUser.save()
        .then(user => {
            console.log("User created:", user); // Logging the created user
            res.json(user);
        })
        .catch(err => {
            console.log("Error:", err); // Logging any errors
            res.json(err);
        });
});

// Sign Up page Post request
app.post("/register", (req, res) => {
    console.log("Request Body:", req.body); // Logging the request body

    // Destructuring name and email from req.body
    const { name, email,Number,area,organization,location,experience,language } = req.body;
    // Creating a new user instance
    const newUser = new registrationModel({ name, email,Number,area,organization,location,experience,language });

    // Saving the new user to the database
    newUser.save()
        .then(user => {
            console.log("Registration success:", user); // Logging the created user
            res.json(user);
        })
        .catch(err => {
            console.log("Error:", err); // Logging any errors
            res.json(err);
        });
});



const PORT = 4000;

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
